
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package main;

import java.sql.*;
import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */

public class form_peminjaman extends javax.swing.JPanel {
    public Statement st;
    public ResultSet rs;
    
    Connection cn = config.koneksi.getConnection();
   
    
    public form_peminjaman() {
        initComponents();
        display();
        listBook();
        notClicked();
        txt_book.setEditable(false);
        tb_list_book.setEditingRow(0);
        tb_list_book.setEditingColumn(0);
        
    }
    
    private void clear(){
    txt_student_id.setText("");
    txt_major.setText("");
    txt_book.setText("");
    }
    
    
    private void clicked(){
        btn_cancel.setVisible(true);
        btn_delete.setVisible(true);
        btn_returned.setVisible(true);
        btn_add.setText("EDIT");
    }
    private void notClicked(){
        lab_id.setText("");
        btn_cancel.setVisible(false);
        btn_delete.setVisible(false);
        btn_returned.setVisible(false);
        btn_add.setText("ADD");
        tb_borrowings.removeAll();
    display();
    }
    
    
    private void listBook(){
        try {
            st = cn.createStatement();
            rs = st.executeQuery("SELECT * FROM books WHERE stock > 0");
            
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("ID");
            model.addColumn("Title");
            model.addColumn("Author");          
            model.addColumn("Published");
            model.addColumn("Category");
            model.addColumn("Stock");
            
            model.getDataVector().removeAllElements();
            model.fireTableChanged(null);
            model.setRowCount(0);
            while(rs.next()){
            Object[]data = {
                rs.getString("book_id"),
                rs.getString("title"),
                rs.getString("author"),
                rs.getString("published"),
                rs.getString("category"),
                rs.getString("stock")          
            };
            model.addRow(data);
            tb_list_book.setModel(model);
            }
        } catch (Exception e) {
        }
    }

    
    private void display(){
        try {
            st = cn.createStatement();
            rs = st.executeQuery("SELECT b.borrowing_id AS \"Borrowing ID\",\n" +
"       b.student_id AS \"Student ID\",\n" +
"       b.major AS \"Major\",\n" +
"       b.book_id AS \"Book ID\",\n" +
"       bo.title AS \"Book Title\",\n" +
"       b.borrow_date AS \"Borrow Date\",\n" +
"       b.return_date AS \"Return Date\",\n" +
"       b.status AS \"Status\"\n" +
"FROM borrowings b\n" +
"JOIN books bo ON b.book_id = bo.book_id;");

            // Inisialisasi array data
            ArrayList<Object[]> data = new ArrayList<>();

            // Kolom-kolom yang akan ditampilkan di tabel
            String[] columns = {"Borrowing ID","Student ID", "Major", "Book ID","Book Title", "Borrow Date" , "Return date","Status"};

            // Membuat model tabel dengan kolom-kolom yang ditentukan
            DefaultTableModel model = new DefaultTableModel(columns, 0);

            // Mengambil data dari hasil query dan menambahkannya ke dalam array data
            while (rs.next()) {
                Object[] row = {
                    rs.getString("Borrowing ID"),
                    rs.getString("Student ID"),
                    rs.getString("Major"),
                    rs.getString("Book ID"),
                    rs.getString("Book Title"),
                    rs.getString("Borrow Date"),
                    rs.getString("Return Date"),
                    rs.getString("Status")
                };
                data.add(row);
            }

            // Menambahkan data dari array data ke dalam model tabel
            for (Object[] row : data) {
                model.addRow(row);
            }

            // Mengatur model tabel ke dalam tabel tb_borrowings
            tb_borrowings.setModel(model);

            // Memperbarui tampilan tabel
            model.fireTableDataChanged();

            
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(null, e);
        }
        
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        mainPanel = new javax.swing.JPanel();
        data_peminjaman = new javax.swing.JPanel();
        group = new javax.swing.JPanel();
        btn_add = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        btn_returned = new javax.swing.JButton();
        btn_cancel = new javax.swing.JButton();
        wrap = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_borrowings = new javax.swing.JTable();
        tambah_peminjaman = new javax.swing.JPanel();
        btn_save = new javax.swing.JButton();
        btn_cancel1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txt_student_id = new javax.swing.JTextField();
        txt_major = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        wrap_table = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tb_list_book = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        txt_book = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lab_id = new javax.swing.JLabel();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setLayout(new java.awt.CardLayout());

        mainPanel.setLayout(new java.awt.CardLayout());

        data_peminjaman.setBackground(new java.awt.Color(255, 255, 255));

        group.setBackground(new java.awt.Color(255, 255, 255));
        group.setLayout(new java.awt.GridLayout(1, 0));

        btn_add.setBackground(new java.awt.Color(0, 51, 102));
        btn_add.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        btn_add.setForeground(new java.awt.Color(255, 255, 255));
        btn_add.setText("ADD");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });
        group.add(btn_add);

        btn_delete.setBackground(new java.awt.Color(153, 0, 51));
        btn_delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete.png"))); // NOI18N
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });
        group.add(btn_delete);

        btn_returned.setBackground(new java.awt.Color(0, 153, 0));
        btn_returned.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/returned.png"))); // NOI18N
        btn_returned.setPreferredSize(new java.awt.Dimension(50, 46));
        btn_returned.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_returnedActionPerformed(evt);
            }
        });
        group.add(btn_returned);

        btn_cancel.setBackground(new java.awt.Color(153, 0, 51));
        btn_cancel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_cancel.setForeground(new java.awt.Color(255, 255, 255));
        btn_cancel.setText("CANCEL");
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });
        group.add(btn_cancel);

        wrap.setBackground(new java.awt.Color(255, 255, 255));
        wrap.setLayout(new java.awt.CardLayout());

        tb_borrowings.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tb_borrowings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_borrowingsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tb_borrowings);

        wrap.add(jScrollPane1, "card2");

        javax.swing.GroupLayout data_peminjamanLayout = new javax.swing.GroupLayout(data_peminjaman);
        data_peminjaman.setLayout(data_peminjamanLayout);
        data_peminjamanLayout.setHorizontalGroup(
            data_peminjamanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(data_peminjamanLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(data_peminjamanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(wrap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(data_peminjamanLayout.createSequentialGroup()
                        .addComponent(group, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(265, Short.MAX_VALUE))))
        );
        data_peminjamanLayout.setVerticalGroup(
            data_peminjamanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(data_peminjamanLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(group, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(wrap, javax.swing.GroupLayout.DEFAULT_SIZE, 657, Short.MAX_VALUE))
        );

        mainPanel.add(data_peminjaman, "card2");

        tambah_peminjaman.setBackground(new java.awt.Color(255, 255, 255));

        btn_save.setBackground(new java.awt.Color(0, 51, 102));
        btn_save.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        btn_save.setForeground(new java.awt.Color(255, 255, 255));
        btn_save.setText("SAVE");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        btn_cancel1.setBackground(new java.awt.Color(153, 0, 51));
        btn_cancel1.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        btn_cancel1.setForeground(new java.awt.Color(255, 255, 255));
        btn_cancel1.setText("Cancel");
        btn_cancel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancel1ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 102));
        jLabel2.setText("STUDENT ID");

        txt_student_id.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 102), 1, true));

        txt_major.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 102), 1, true));
        txt_major.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_majorActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 102));
        jLabel3.setText("MAJOR");

        wrap_table.setBackground(new java.awt.Color(255, 255, 255));

        tb_list_book.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tb_list_book.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tb_list_book.getTableHeader().setResizingAllowed(false);
        tb_list_book.getTableHeader().setReorderingAllowed(false);
        tb_list_book.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_list_bookMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tb_list_book);

        javax.swing.GroupLayout wrap_tableLayout = new javax.swing.GroupLayout(wrap_table);
        wrap_table.setLayout(wrap_tableLayout);
        wrap_tableLayout.setHorizontalGroup(
            wrap_tableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 893, Short.MAX_VALUE)
        );
        wrap_tableLayout.setVerticalGroup(
            wrap_tableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(wrap_tableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 51, 102));
        jLabel7.setText("BOOK");

        txt_book.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 102), 1, true));
        txt_book.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_bookActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel4.setText("Please select book");

        jLabel5.setText("ID :");

        lab_id.setText("id");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txt_student_id)
            .addComponent(txt_major)
            .addComponent(wrap_table, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(txt_book)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(jLabel4)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lab_id)))
                .addGap(0, 793, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lab_id))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_student_id, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_major, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_book, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(wrap_table, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout tambah_peminjamanLayout = new javax.swing.GroupLayout(tambah_peminjaman);
        tambah_peminjaman.setLayout(tambah_peminjamanLayout);
        tambah_peminjamanLayout.setHorizontalGroup(
            tambah_peminjamanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tambah_peminjamanLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(tambah_peminjamanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(tambah_peminjamanLayout.createSequentialGroup()
                        .addComponent(btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_cancel1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tambah_peminjamanLayout.setVerticalGroup(
            tambah_peminjamanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tambah_peminjamanLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(tambah_peminjamanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_save, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addComponent(btn_cancel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainPanel.add(tambah_peminjaman, "card2");

        add(mainPanel, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        try {
            st = cn.createStatement();
            
             String student_id = txt_student_id.getText();
             String major = txt_major.getText();
             String book;
            book = tb_list_book.getValueAt(tb_list_book.getSelectedRow(),0).toString();
             
             if(student_id.equals("") || major.equals("") || book.equals("")){
                JOptionPane.showMessageDialog(null, "DATA TIDAK BOLEH KOSONG");
                return;
             }
            
            if(btn_add.getText() == "ADD"){
                //action tambah data
                String sql = "INSERT INTO borrowings (student_id, major, book_id, borrow_date, return_date, status)" +
                "VALUES ("+student_id+", '"+major+"', "+book+", CURDATE(), DATE_ADD(CURDATE(), INTERVAL 7 DAY), 'Borrowed');";
                String update = "UPDATE books \n" +
                "SET stock = stock - 1 \n" +
                "WHERE book_id = "+book+"";
                

                st.executeUpdate(sql);
                st.executeUpdate(update);
                notClicked();
                JOptionPane.showMessageDialog(null, "DATA BERHASIL DITAMBAHKAN");
                mainPanel.removeAll();
                mainPanel.repaint();
                mainPanel.revalidate();
                mainPanel.add(data_peminjaman);
                mainPanel.repaint();
                mainPanel.revalidate();
                display();
                listBook();
                clear();
                
            }else{
                //action edit data
                
                String update = "UPDATE borrowings SET student_id = '"+student_id+"', major = '"+major+"' , book_id = '"+book+"' WHERE borrowing_id = '"+lab_id.getText()+"';";
                st.executeUpdate(update);
                JOptionPane.showMessageDialog(null, "DATA BERHASIL DI UPDATE");
                mainPanel.removeAll();
                mainPanel.repaint();
                mainPanel.revalidate();
                mainPanel.add(data_peminjaman);
                mainPanel.repaint();
                mainPanel.revalidate();
                display();
                clear();
                listBook();
                notClicked();
            }
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btn_saveActionPerformed

    private void btn_cancel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancel1ActionPerformed
        // TODO add your handling code here:
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();
        mainPanel.add(data_peminjaman);
        mainPanel.repaint();
        mainPanel.revalidate();
        clear();
        notClicked();
    }//GEN-LAST:event_btn_cancel1ActionPerformed

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        // TODO add your handling code here:
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();
        mainPanel.add(tambah_peminjaman);
        mainPanel.repaint();
        mainPanel.revalidate();
    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        // TODO add your handling code here:
        if(txt_student_id.getText().equals("")){
            JOptionPane.showMessageDialog(null, "SILAHKAN PILIH DATA");
        }else{
            int jawab = JOptionPane.showConfirmDialog(null, "LANJUTKAN UNTUK MENGHAPUS DATA !","KONFRIMASI",JOptionPane.YES_NO_OPTION);
            if(jawab == 0 ){
                try {
                    st = cn.createStatement();
                    Object value = tb_borrowings.getValueAt(tb_borrowings.getSelectedRow(), 0);

                    String sql = "DELETE FROM borrowings WHERE borrowing_id = '"+ value.toString() +"' ;";
                    JOptionPane.showMessageDialog(null,"BUKU BERHASIL DIHAPUS");
                    st.executeUpdate(sql);
                    notClicked();
                    display();
                    clear();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null,e);
                }

            }

        }
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_returnedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_returnedActionPerformed

        // TODO add your handling code here:
        if(txt_student_id.getText().equals("")){
            JOptionPane.showMessageDialog(null, "SILAHKAN PILIH DATA");
        }else if(tb_borrowings.getValueAt(tb_borrowings.getSelectedRow(), 7 ).toString().equals("Returned")){
            JOptionPane.showMessageDialog(null, "BUKU SUDAH DIKEMBALIKAN");
        }else{

            int jawab = JOptionPane.showConfirmDialog(null, "KONFIRMASI PENGEMBAILIAN BUKU !","KONFRIMASI",JOptionPane.YES_NO_OPTION);
            if(jawab == 0 ){
                try {
                    st = cn.createStatement();
                    Object borrowing = tb_borrowings.getValueAt(tb_borrowings.getSelectedRow(), 0);
                    Object book = tb_borrowings.getValueAt(tb_borrowings.getSelectedRow(), 3);

                    String sql =    "UPDATE borrowings SET status = 'Returned' WHERE borrowing_id = '"+ borrowing.toString() +"' ;";
                    String update = "UPDATE books SET stock = stock + 1 WHERE book_id = "+book.toString()+"";

                    st.executeUpdate(update);
                    st.executeUpdate(sql);
                    JOptionPane.showMessageDialog(null,"PENGEMBALIAN BERHASIL");
                    notClicked();
                    display();
                    clear();
                    listBook();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null,e);
                }

            }

        }
    }//GEN-LAST:event_btn_returnedActionPerformed

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        // TODO add your handling code here:
        clear();
        notClicked();
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void txt_bookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_bookActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txt_bookActionPerformed

    private void tb_list_bookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_list_bookMouseClicked
        // TODO add your handling code here:
        txt_book.setText(tb_list_book.getValueAt(tb_list_book.getSelectedRow(),1).toString());
    }//GEN-LAST:event_tb_list_bookMouseClicked

    private void txt_majorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_majorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_majorActionPerformed

    private void tb_borrowingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_borrowingsMouseClicked
        // TODO add your handling code here:
        lab_id.setText(tb_borrowings.getValueAt(tb_borrowings.getSelectedRow(),0).toString());
        txt_student_id.setText(tb_borrowings.getValueAt(tb_borrowings.getSelectedRow(),1).toString());
        txt_major.setText(tb_borrowings.getValueAt(tb_borrowings.getSelectedRow(),2).toString());
        txt_book.setText(tb_borrowings.getValueAt(tb_borrowings.getSelectedRow(),4).toString());
        clicked();
    }//GEN-LAST:event_tb_borrowingsMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_cancel1;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_returned;
    private javax.swing.JButton btn_save;
    private javax.swing.JPanel data_peminjaman;
    private javax.swing.JPanel group;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lab_id;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel tambah_peminjaman;
    private javax.swing.JTable tb_borrowings;
    private javax.swing.JTable tb_list_book;
    private javax.swing.JTextField txt_book;
    private javax.swing.JTextField txt_major;
    private javax.swing.JTextField txt_student_id;
    private javax.swing.JPanel wrap;
    private javax.swing.JPanel wrap_table;
    // End of variables declaration//GEN-END:variables
}
